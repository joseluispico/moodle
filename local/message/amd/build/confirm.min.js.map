{"version":3,"sources":["../src/confirm.js"],"names":["define","$","ModalFactory","String","ModalEvents","Ajax","Notification","trigger","create","type","types","SAVE_CANCEL","title","get_string","body","preShowCallback","triggerElement","modal","classString","classList","messageid","substr","lastIndexOf","params","setSaveButtonText","large","done","getRoot","on","save","e","preventDefault","footer","Y","one","setContent","spinner","M","util","add_spinner","show","request","methodname","args","call","data","window","location","reload","addNotification","message","fail","exception"],"mappings":"AAyBAA,OAAM,yBAAC,CAAC,QAAD,CAAW,oBAAX,CAAiC,UAAjC,CAA6C,mBAA7C,CAAkE,WAAlE,CAA+E,mBAA/E,CAAD,CAAsG,SAASC,CAAT,CAAYC,CAAZ,CAA0BC,CAA1B,CAAkCC,CAAlC,CAA+CC,CAA/C,CAAqDC,CAArD,CAAkE,CAC1K,GAAIC,CAAAA,CAAO,CAAGN,CAAC,CAAC,8BAAD,CAAf,CACAC,CAAY,CAACM,MAAb,CAAoB,CAChBC,IAAI,CAAEP,CAAY,CAACQ,KAAb,CAAmBC,WADT,CAEhBC,KAAK,CAAET,CAAM,CAACU,UAAP,CAAkB,gBAAlB,CAAoC,eAApC,CAFS,CAGhBC,IAAI,CAAEX,CAAM,CAACU,UAAP,CAAkB,wBAAlB,CAA4C,eAA5C,CAHU,CAIhBE,eAAe,CAAE,yBAASC,CAAT,CAAyBC,CAAzB,CAAgC,CAE7CD,CAAc,CAAGf,CAAC,CAACe,CAAD,CAAlB,CAF6C,GAIzCE,CAAAA,CAAW,CAAGF,CAAc,CAAC,CAAD,CAAd,CAAkBG,SAAlB,CAA4B,CAA5B,CAJ2B,CAKzCC,CAAS,CAAGF,CAAW,CAACG,MAAZ,CAAmBH,CAAW,CAACI,WAAZ,CAAwB,iBAAxB,IAAnB,CAL6B,CAQ7CL,CAAK,CAACM,MAAN,CAAe,CAAC,UAAaH,CAAd,CAAf,CACAH,CAAK,CAACO,iBAAN,CAAwBrB,CAAM,CAACU,UAAP,CAAkB,gBAAlB,CAAoC,eAApC,CAAxB,CACH,CAde,CAehBY,KAAK,GAfW,CAApB,CAgBGlB,CAhBH,EAiBKmB,IAjBL,CAiBU,SAAST,CAAT,CAAgB,CAElBA,CAAK,CAACU,OAAN,GAAgBC,EAAhB,CAAmBxB,CAAW,CAACyB,IAA/B,CAAqC,SAASC,CAAT,CAAY,CAE7CA,CAAC,CAACC,cAAF,GAEA,GAAIC,CAAAA,CAAM,CAAGC,CAAC,CAACC,GAAF,CAAM,eAAN,CAAb,CACAF,CAAM,CAACG,UAAP,CAAkB,YAAlB,EACA,GAAIC,CAAAA,CAAO,CAAGC,CAAC,CAACC,IAAF,CAAOC,WAAP,CAAmBN,CAAnB,CAAsBD,CAAtB,CAAd,CACAI,CAAO,CAACI,IAAR,GAEA,GAAIC,CAAAA,CAAO,CAAG,CACVC,UAAU,CAAE,8BADF,CAEVC,IAAI,CAAE1B,CAAK,CAACM,MAFF,CAAd,CAKAlB,CAAI,CAACuC,IAAL,CAAU,CAACH,CAAD,CAAV,EAAqB,CAArB,EAAwBf,IAAxB,CAA6B,SAAUmB,CAAV,CAAgB,CACzC,GAAI,KAAAA,CAAJ,CAAkB,CAEdC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAEH,CAJD,IAKK,CACD1C,CAAY,CAAC2C,eAAb,CAA6B,CACzBC,OAAO,CAAE/C,CAAM,CAACU,UAAP,CAAkB,uBAAlB,CAA2C,eAA3C,CADgB,CAEzBJ,IAAI,CAAE,OAFmB,CAA7B,CAIH,CAEJ,CAbD,EAaG0C,IAbH,CAaQ7C,CAAY,CAAC8C,SAbrB,CAcH,CA5BD,CA6BH,CAhDL,CAkDH,CApDK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript controller to show a Delete button.\n *\n * @module     local_message\n *\n *\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery', 'core/modal_factory', 'core/str', 'core/modal_events', 'core/ajax', 'core/notification'], function($, ModalFactory, String, ModalEvents, Ajax, Notification){\n    var trigger = $('.local_message_delete_button');\n    ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: String.get_string('delete_message', 'local_message'),\n        body: String.get_string('delete_message_confirm', 'local_message'),\n        preShowCallback: function(triggerElement, modal) {\n        // Do something before you show the modal\n            triggerElement = $(triggerElement);\n            //Y.log(triggerElement);\n            let classString = triggerElement[0].classList[0];\n            let messageid = classString.substr(classString.lastIndexOf('local.messageid') + 'local.messageid'.length);\n            //Y.log(messageid);\n            // Set the message id in this modal\n            modal.params = {'messageid': messageid};\n            modal.setSaveButtonText(String.get_string('delete_message', 'local_message'));\n        },\n        large: true,\n    }, trigger)\n        .done(function(modal) {\n            // Do what you want with your new modal.\n            modal.getRoot().on(ModalEvents.save, function(e) {\n                // Stop the default save button behaviour which is to close the modal.\n                e.preventDefault();\n                //Y.log(modal.params);\n                let footer = Y.one('.modal-footer');\n                footer.setContent('Deleting..');\n                let spinner = M.util.add_spinner(Y, footer);\n                spinner.show();\n\n                let request = {\n                    methodname: 'local_message_delete_message',\n                    args: modal.params,\n                };\n\n                Ajax.call([request])[0].done(function (data) {\n                    if (data === true){\n                        //redirect to manage page\n                        window.location.reload();\n                        //Y.log('delete message successfully');\n                    }\n                    else {\n                        Notification.addNotification({\n                            message: String.get_string('delete_message_failed', 'local_message'),\n                            type: 'error',\n                        });\n                    }\n\n                }).fail(Notification.exception);\n            });\n        });\n\n});\n"],"file":"confirm.min.js"}